// Labels
@mixin wuiFormLabel {
  @include wuiFontSizeXS;
  color: $wuiTitleColor;
  font-weight: $wuiFontWeightSemiBold;
}

@mixin wuiFormControlLayoutPadding($numOfIcons, $side: 'right', $compressed: false) {
  $iconSize: $wuiSize;
  $iconPadding: $wuiFormControlPadding;
  $marginBetweenIcons: $wuiFormControlPadding / 2;

  @if ($compressed) {
    $iconPadding: $wuiFormControlCompressedPadding;
  }

  @if variable-exists(numOfIcons) == false {
    @error '$numOfIcons:integer (1-3) must be provided to @mixin wuiFormControlLayoutPadding().';
  } @else if $numOfIcons == 1 {
    padding-#{$side}: $iconPadding + $iconSize + $iconPadding;
  } @else if $numOfIcons == 2 {
    padding-#{$side}: $iconPadding + $iconSize + $marginBetweenIcons + $iconSize + $iconPadding;
  } @else if $numOfIcons == 3 {
    padding-#{$side}: $iconPadding + $iconSize + $marginBetweenIcons + $iconSize + $marginBetweenIcons + $iconSize + $iconPadding;
  }
}

@mixin wuiFormControlLayoutClearIcon($iconClass) {
  $clearSize: $wuiSize;
  @include size($clearSize);

  pointer-events: all;
  background-color: lightOrDarkTheme($wuiColorMediumShade, $wuiColorDarkShade);
  border-radius: $clearSize;
  line-height: 0; // ensures the icon stays vertically centered

  &:focus {
    @include wuiFocusRing;
  }

  #{$iconClass} {
    @include size($wuiSizeS);
    fill: $wuiColorEmptyShade;
    stroke: $wuiColorEmptyShade;
    stroke-width: 2px; // increase thickness of icon at such a small size
  }
}

@mixin wuiPlaceholderPerBrowser {
  // sass-lint:disable-block no-vendor-prefixes
  // Each prefix must be its own content block
  &::-webkit-input-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::placeholder { @content; }
}

@function wuiFormControlGradient($color: $wuiColorPrimary) {
  @return linear-gradient(to top,
    $color,
    $color 2px,
    transparent 2px,
    transparent 100%
  );
}

@mixin wuiFormControlText {
  @include wuiFont;
  font-size: $wuiFontSizeS;
  color: $wuiTextColor;

  @include internetExplorerOnly {
    line-height: 1em; // fixes text alignment in IE
  }

  // sass-lint:disable-block mixins-before-declarations
  @include wuiPlaceholderPerBrowser {
    color: $wuiColorDarkShade;
  }
}

@mixin wuiFormControlSize(
  $height: $wuiFormControlHeight,
  $includeAlternates: false
) {
  // Default
  max-width: $wuiFormMaxWidth;
  width: 100%;
  height: $height;

  @if ($includeAlternates) {
    &--fullWidth {
      max-width: 100%;
    }

    &--compressed {
      height: $wuiFormControlCompressedHeight;
    }

    &--inGroup {
      height: 100%;
    }
  }
}

@mixin wuiFormControlWithIcon($isIconOptional: false, $side: 'left', $compressed: false) {
  @if ($isIconOptional) {
    @at-root {
      #{&}--withIcon {
        @include wuiFormControlLayoutPadding(1, $side, $compressed);
      }
    }
  } @else {
    @include wuiFormControlLayoutPadding(1, $side, $compressed);
  }
}

@mixin wuiFormControlIsLoading($isNextToIcon: false) {
  @at-root {
    #{&}-isLoading {
      @if ($isNextToIcon) {
        @include wuiFormControlLayoutPadding(2);
      } @else {
        @include wuiFormControlLayoutPadding(1);
      }
    }

    #{&}-isLoading#{&}--compressed {
      @if ($isNextToIcon) {
        @include wuiFormControlLayoutPadding(2, $compressed: true);
      } @else {
        @include wuiFormControlLayoutPadding(1, $compressed: true);
      }
    }
  }
}

// 1. Must supply both values to background-size or some browsers apply the single value to both directions

@mixin wuiFormControlDefaultShadow($borderOnly: false) {
  // sass-lint:disable-block indentation
  background-color: $wuiFormBackgroundColor;
  background-repeat: no-repeat;
  background-size: 0% 100%; // 1

  @if ($borderOnly) {
    box-shadow: inset 0 0 0 1px $wuiFormBorderColor;
  } @else {
    box-shadow:
      #{$wuiFormControlBoxShadow},
      inset 0 0 0 1px $wuiFormBorderColor;
  }

  transition:
    box-shadow $wuiAnimSpeedFast ease-in,
    background-image $wuiAnimSpeedFast ease-in,
    background-size $wuiAnimSpeedFast ease-in,
    background-color $wuiAnimSpeedFast ease-in;

  // Fixes bug in Firefox where adding a transition to the background-color
  // caused a flash of differently styled dropdown.
  @supports (-moz-appearance: none) { // sass-lint:disable-line no-vendor-prefixes
    // List *must* be in the same order as the above.
    transition-property: box-shadow, background-image, background-size;
  }
}

@mixin wuiFormControlFocusStyle($borderOnly: false) {
  // sass-lint:disable-block indentation, empty-args
  background-color: tintOrShade($wuiColorEmptyShade, 0%, 40%);
  background-image: wuiFormControlGradient();
  background-size: 100% 100%; // 1

  @if ($borderOnly) {
    box-shadow: inset 0 0 0 1px $wuiFormBorderColor;
  } @else {
    box-shadow:
      0 1px 1px -1px transparentize($wuiShadowColor, .8),
      0 4px 4px -2px transparentize($wuiShadowColor, .8),
      inset 0 0 0 1px $wuiFormBorderColor;
  }
}

@mixin wuiFormControlInvalidStyle {
  background-image: wuiFormControlGradient($wuiColorDanger);
  background-size: 100%;
}

@mixin wuiFormControlDisabledStyle {
  cursor: not-allowed;
  color: $wuiFormControlDisabledColor;
  background: $wuiFormBackgroundDisabledColor;
  box-shadow: inset 0 0 0 1px $wuiFormBorderDisabledColor;

  // sass-lint:disable-block mixins-before-declarations
  @include wuiPlaceholderPerBrowser {
    color: $wuiFormControlDisabledColor;
  }
}

@mixin wuiFormControlReadOnlyStyle {
  cursor: default;
  // Use transparency since there is no border and in case form is on a non-white background
  background: $wuiFormBackgroundReadOnlyColor;
  border-color: transparent;
  box-shadow: inset 0 0 0 1px $wuiFormBorderDisabledColor;
}


// 2. Override invalid state with focus state.

@mixin wuiFormControlStyle($borderOnly: false, $includeStates: true, $includeSizes: true) {
  @include wuiFormControlSize($includeAlternates: $includeSizes);
  @include wuiFormControlDefaultShadow;
  @include wuiFormControlText;

  border: none;
  border-radius: $wuiFormControlBorderRadius;
  padding: $wuiFormControlPadding;

  @if ($includeStates) {
    &:invalid { // 2
      @include wuiFormControlInvalidStyle;
    }

    &:focus { // 2
      @include wuiFormControlFocusStyle;
    }

    &:disabled {
      @include wuiFormControlDisabledStyle;
    }

    &[readOnly] {
      @include wuiFormControlReadOnlyStyle;
    }

    // Needs to be set for autofill
    // sass-lint:disable-block no-vendor-prefixes
    &:-webkit-autofill {
      -webkit-text-fill-color: lightOrDarkTheme($wuiColorDarkestShade, $wuiColorLightShade);

      ~ .wuiFormControlLayoutIcons {
        color: lightOrDarkTheme($wuiColorDarkestShade, $wuiColorLightShade);
      }
    }

  }

  @if ($includeSizes) {
    &--compressed {
      @include wuiFormControlStyleCompressed($borderOnly, $includeStates);
    }

    &--inGroup {
      // sass-lint:disable-block no-important
      box-shadow: none !important;
      border-radius: 0;
    }
  }
}

@mixin wuiFormControlStyleCompressed($borderOnly: false, $includeStates: true) {
  @include wuiFormControlDefaultShadow($borderOnly: true);
  padding: $wuiFormControlCompressedPadding;
  border-radius: $wuiFormControlCompressedBorderRadius;

  @if ($includeStates) {
    &:invalid { // 2
      @include wuiFormControlInvalidStyle;
    }

    &:focus { // 2
      @include wuiFormControlFocusStyle($borderOnly: true);
    }

    &:disabled {
      @include wuiFormControlDisabledStyle;
    }

    &[readOnly] {
      @include wuiFormControlReadOnlyStyle;
    }
  }
}

// Custom styles and states for checkboxes and radios

@mixin wuiCustomControl($type: null, $size: $wuiSize) {
  @include wuiSlightShadow;

  @if $size {
    $size: $size - 2px; // subtract 2px from size to account for border size
    padding: $size / 2;
  }

  border: 1px solid $wuiFormCustomControlBorderColor;
  background: $wuiColorEmptyShade no-repeat center;

  @if $type == 'round' {
    border-radius: $size;
  } @else if $type == 'square' {
    border-radius: $wuiCheckboxBorderRadius;
  }
  // sass-lint:disable-block indentation
  transition: background-color $wuiAnimSpeedFast ease-in,
              border-color $wuiAnimSpeedFast ease-in;
}

@mixin wuiCustomControlSelected($type: null) {
  border-color: $wuiColorPrimary;
  background-color: $wuiColorPrimary;

  @if $type != null {
    @include wuiIconBackground($type, $wuiColorEmptyShade);
  }
}

@mixin wuiCustomControlDisabled($type: null) {
  border-color: $wuiColorLightShade;
  background-color: $wuiColorLightShade;
  box-shadow: none;
  @if $type != null {
    @include wuiIconBackground($type, $wuiFormCustomControlDisabledIconColor);
  }
}

@mixin wuiCustomControlFocused {
  @include wuiFocusRing;
  border-color: $wuiColorPrimary;
}

@mixin wuiHiddenSelectableInput {
  position: absolute;
  // sass-lint:disable no-important
  opacity: 0 !important; // Make sure it's still hidden when :disabled
  width: 100%;
  height: 100%;
  cursor: pointer;
}

